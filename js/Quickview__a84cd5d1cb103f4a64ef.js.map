{"version":3,"sources":["./src/utils/SVGDom.ts","./src/events/QuickviewEvents.ts","./src/ui/Quickview/Quickview.ts","./src/ui/Quickview/DefaultQuickviewTemplate.ts","./src/ui/Quickview/QuickviewDocument.ts","./sass/_Quickview.scss"],"names":[],"mappings":"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","file":"Quickview__a84cd5d1cb103f4a64ef.js","sourcesContent":["import { IStringMap } from '../rest/GenericParam';\nimport * as _ from 'underscore';\n\nexport class SVGDom {\n  public static addClassToSVGInContainer(svgContainer: HTMLElement, classToAdd: string) {\n    const svgElement = svgContainer.querySelector('svg');\n    svgElement.setAttribute('class', `${SVGDom.getClass(svgElement)}${classToAdd}`);\n  }\n\n  public static removeClassFromSVGInContainer(svgContainer: HTMLElement, classToRemove: string) {\n    const svgElement = svgContainer.querySelector('svg');\n    svgElement.setAttribute('class', SVGDom.getClass(svgElement).replace(classToRemove, ''));\n  }\n\n  public static addStyleToSVGInContainer(svgContainer: HTMLElement, styleToAdd: IStringMap<any>) {\n    const svgElement = svgContainer.querySelector('svg');\n    _.each(styleToAdd, (styleValue, styleKey) => {\n      svgElement.style[styleKey] = styleValue;\n    });\n  }\n\n  private static getClass(svgElement: SVGElement) {\n    const className = svgElement.getAttribute('class');\n    return className ? className + ' ' : '';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/SVGDom.ts","/**\n * The `IQuickviewLoadedEventArgs` interface describes the object that all\n * [`quickviewLoaded`]{@link QuickviewEvents.quickviewLoaded} event handlers receive as an argument.\n */\nexport interface IQuickviewLoadedEventArgs {\n  /**\n   * The amount of time it took to download the content to display in the quickview modal window (in milliseconds).\n   */\n  duration: number;\n}\n\n/**\n * The `QuickviewEvents` static class contains the string definitions of all events that strongly relate to the\n * [`Quickview`]{@link Quickview} component.\n */\nexport class QuickviewEvents {\n  /**\n   * Triggered by the [`QuickviewDocument`]{@link QuickviewDocument} component when the content to display in the\n   * quickview modal window has just finished downloading.\n   *\n   * The [`Quickview`]{@link Quickview} component listens to this event to know when to remove its loading animation.\n   *\n   * All `quickviewLoaded` event handlers receive a [`QuickviewLoadedEventArgs`]{@link IQuickviewLoadedEventArgs} object\n   * as an argument.\n   *\n   * @type {string} The string value is `quickviewLoaded`.\n   */\n  public static quickviewLoaded = 'quickviewLoaded';\n\n  /**\n   * Triggered by the [`QuickviewDocument`]{@link QuickviewDocument} component when the end user has just clicked the\n   * **Quickview** button/link to open the quickview modal window.\n   *\n   * This event allows external code to modify the terms to highlight before the content of the quickview modal window\n   * is rendered.\n   *\n   * All `openQuickview` event handlers receive an\n   * [`OpenQuickviewEventArgs`]{@link ResultListEvents.IOpenQuickviewEventArgs} object as an argument.\n   *\n   * @type {string} The string value is `openQuickview`.\n   */\n  public static openQuickview = 'openQuickview';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/events/QuickviewEvents.ts","import { Component } from '../Base/Component';\nimport { ComponentOptions, ComponentOptionsType } from '../Base/ComponentOptions';\nimport { IResultsComponentBindings } from '../Base/ResultsComponentBindings';\nimport { Template } from '../Templates/Template';\nimport { DomUtils } from '../../utils/DomUtils';\nimport { IQueryResult } from '../../rest/QueryResult';\nimport { $$, Dom } from '../../utils/Dom';\nimport { DefaultQuickviewTemplate } from './DefaultQuickviewTemplate';\nimport { ResultListEvents } from '../../events/ResultListEvents';\nimport { StringUtils } from '../../utils/StringUtils';\nimport { QuickviewDocument } from './QuickviewDocument';\nimport { QueryStateModel } from '../../models/QueryStateModel';\nimport { QuickviewEvents } from '../../events/QuickviewEvents';\nimport { Initialization, IInitializationParameters } from '../Base/Initialization';\nimport { KeyboardUtils, KEYBOARD } from '../../utils/KeyboardUtils';\nimport { ModalBox as ModalBoxModule } from '../../ExternalModulesShim';\nimport { exportGlobally } from '../../GlobalExports';\n\nimport 'styling/_Quickview';\nimport { SVGIcons } from '../../utils/SVGIcons';\nimport { SVGDom } from '../../utils/SVGDom';\nimport { analyticsActionCauseList } from '../Analytics/AnalyticsActionListMeta';\nimport { Utils } from '../../utils/Utils';\nimport { TemplateComponentOptions } from '../Base/TemplateComponentOptions';\n\nexport interface IQuickviewOptions {\n  title?: string;\n  showDate?: boolean;\n  contentTemplate?: Template;\n  enableLoadingAnimation?: boolean;\n  loadingAnimation?: HTMLElement | Promise<HTMLElement>;\n  alwaysShow?: boolean;\n}\n\ninterface IQuickviewOpenerObject {\n  content: Promise<Dom>;\n  loadingAnimation: HTMLElement | Promise<HTMLElement>;\n}\n\n/**\n * The `Quickview` component renders a button/link which the end user can click to open a modal box containing certain\n * information about a result. Most of the time, this component references a\n * [`QuickviewDocument`]{@link QuickviewDocument} in its [`contentTemplate`]{@link Quickview.options.contentTemplate}.\n *\n * **Note:**\n * > - You can change the appearance of the `Quickview` link/button by adding elements in the inner HTML of its `div`.\n * > - You can change the content of the `Quickview` modal box link by specifying a template `id` or CSS selector (see\n * > the [`contentTemplate`]{@link Quickview.options.contentTemplate} option).\n *\n * **Example:**\n * ```html\n * [ ... ]\n *\n * <script class='result-template' type='text/underscore' id='myContentTemplateId'>\n *   <div>\n *     <span>This content will be displayed when then end user opens the quickview modal box. It could also include other Coveo component, and use core helpers.</span>\n *     <table class=\"CoveoFieldTable\">\n *       <tr data-field=\"@liboardshorttitle\" data-caption=\"Board\" />\n *       <tr data-field=\"@licategoryshorttitle\" data-caption=\"Category\" />\n *       <tr data-field=\"@sysauthor\" data-caption=\"Author\" />\n *     </table>\n *   </div>\n * </script>\n *\n * [ ... ]\n *\n * <div class='CoveoResultList'>\n *   <script class='result-template' type='text/underscore' id='myResultTemplateId'>\n *\n *   [ ... ]\n *\n *     <!-- The `myContentTemplateId` template applies when displaying content in the quickview modal box. -->\n *       <div class='CoveoQuickview' data-template-id='myContentTemplateId'>\n *         <!-- This changes the appearance of the Quickview button itself in the results -->\n *         <span>Click here for a quickview</span>\n *       </div>\n *   </script>\n *\n *   [ ... ]\n *\n * <!-- Note that simply including `<div class='CoveoQuickview'></div>` in the markup will be enough most of the time, since the component includes a default template and a default button appearance. -->\n * ```\n *\n * This component is a result template component (see [Result Templates](https://developers.coveo.com/x/aIGfAQ)).\n */\nexport class Quickview extends Component {\n  static ID = 'Quickview';\n\n  static doExport = () => {\n    exportGlobally({\n      Quickview: Quickview,\n      QuickviewDocument: QuickviewDocument\n    });\n  };\n\n  /**\n   * @componentOptions\n   */\n  static options: IQuickviewOptions = {\n    /**\n     * Specifies whether to always show the `Quickview` button/link, even when the index body of an item is empty.\n     *\n     * In such cases, the [`contentTemplate`]{@link Quickview.options.contentTemplate} defines what appears in the\n     * `Quickview` modal box. Consequently, if there is no quickview for the item, you *MUST* specify a custom\n     * `contentTemplate`, otherwise the component will throw an error when opened.\n     *\n     * Default value is `false`.\n     */\n    alwaysShow: ComponentOptions.buildBooleanOption({ defaultValue: false }),\n\n    /**\n     * Specifies the title that should appear in the `Quickview` modal box header.\n     *\n     * Default value is undefined, which is equivalent to the empty string.\n     */\n    title: ComponentOptions.buildStringOption(),\n\n    /**\n     * Specifies whether to display the item date in the `Quickview` modal box header.\n     *\n     * Default value is `true`.\n     */\n    showDate: ComponentOptions.buildBooleanOption({ defaultValue: true }),\n\n    /**\n     * Specifies whether to enable the loading animation.\n     *\n     * See also [`loadingAnimation`]{Quickview.options.loadingAnimation}.\n     *\n     * Default value is `true`.\n     */\n    enableLoadingAnimation: ComponentOptions.buildBooleanOption({ defaultValue: true }),\n\n    /**\n     * Specifies a custom template to use when displaying content in the `Quickview` modal box.\n     *\n     * **Note:**\n     * > You can use [`CoreHelpers`]{@link ICoreHelpers} methods in your content template.\n     *\n     * You can specify a previously registered template to use either by referring to its HTML `id` attribute or to a\n     * CSS selector (see [`TemplateCache`]{@link TemplateCache}).\n     *\n     * **Example:**\n     *\n     * * Specifying a previously registered template by referring to its HTML `id` attribute:\n     *\n     * ```html\n     * <div class=\"CoveoQuickview\" data-template-id=\"myContentTemplateId\"></div>\n     * ```\n     *\n     * * Specifying a previously registered template by referring to a CSS selector:\n     *\n     * ```html\n     * <div class='CoveoQuickview' data-template-selector=\".myContentTemplateSelector\"></div>\n     * ```\n     *\n     * If you do not specify a custom content template, the component uses its default template.\n     */\n    contentTemplate: TemplateComponentOptions.buildTemplateOption({\n      selectorAttr: 'data-template-selector',\n      idAttr: 'data-template-id'\n    }),\n\n    /**\n     * If [`enableLoadingAnimation`]{@link Quickview.options.enableLoadingAnimation} is `true`, specifies a custom\n     * animation to display while the content of the quickview modal window is loading. You can either specify the CSS\n     * selector of the HTML element you wish to display, or the `id` of a previously registered template (see\n     * [`TemplateCache`]{@link TemplateCache}).\n     *\n     * See [Branding Customization - Customizing the Quickview Loading Animation](https://developers.coveo.com/x/EoGfAQ#BrandingCustomization-CustomizingtheQuickviewLoadingAnimation).\n     *\n     * **Examples:**\n     *\n     * * Specifying the CSS selector of the HTML element to display:\n     *\n     * ```html\n     * <div class=\"CoveoQuickview\" data-loading-animation-selector=\".my-loading-animation\"></div>\n     * ```\n     *\n     * * Specifying the `id` of a previously registered template:\n     *\n     * ```html\n     * <div class=\"CoveoQuickview\" data-loading-animation-template-id=\"my-loading-animation-template\"></div>\n     * ```\n     *\n     * By default, the loading animation is a Coveo animation, which you can customize with CSS (see\n     * [Branding Customization - Customizing the Default Loading Animation](https://developers.coveo.com/x/EoGfAQ#BrandingCustomization-CustomizingtheDefaultLoadingAnimation).\n     */\n    loadingAnimation: ComponentOptions.buildOption<HTMLElement | Promise<HTMLElement>>(\n      ComponentOptionsType.NONE,\n      (element: HTMLElement) => {\n        const loadingAnimationSelector = element.getAttribute('data-loading-animation-selector');\n        if (loadingAnimationSelector != null) {\n          const loadingAnimation = $$(document.documentElement).find(loadingAnimationSelector);\n          if (loadingAnimation != null) {\n            $$(loadingAnimation).detach();\n            return loadingAnimation;\n          }\n        }\n        const id = element.getAttribute('data-loading-animation-template-id');\n        if (id != null) {\n          const loadingAnimationTemplate = TemplateComponentOptions.loadResultTemplateFromId(id);\n          if (loadingAnimationTemplate) {\n            return loadingAnimationTemplate.instantiateToElement(undefined, {\n              checkCondition: false\n            });\n          }\n        }\n        return DomUtils.getBasicLoadingAnimation();\n      }\n    )\n  };\n\n  public static resultCurrentlyBeingRendered: IQueryResult = null;\n\n  private modalbox: Coveo.ModalBox.ModalBox;\n\n  /**\n   * Creates a new `Quickview` component.\n   * @param element The HTMLElement on which to instantiate the component.\n   * @param options The options for the `Quickview` component.\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\n   * automatically resolved (with a slower execution time).\n   * @param result The result to associate the component with.\n   * @param ModalBox The quickview modal box.\n   */\n  constructor(\n    public element: HTMLElement,\n    public options?: IQuickviewOptions,\n    public bindings?: IResultsComponentBindings,\n    public result?: IQueryResult,\n    private ModalBox = ModalBoxModule\n  ) {\n    super(element, Quickview.ID, bindings);\n    this.options = ComponentOptions.initComponentOptions(element, Quickview, options);\n\n    if (this.options.contentTemplate == null) {\n      this.options.contentTemplate = new DefaultQuickviewTemplate();\n    }\n\n    // If there is no content inside the Quickview div,\n    // we need to add something that will show up in the result template itself\n    if (/^\\s*$/.test(this.element.innerHTML)) {\n      const iconForQuickview = $$('div', { className: 'coveo-icon-for-quickview' }, SVGIcons.icons.quickview);\n      SVGDom.addClassToSVGInContainer(iconForQuickview.el, 'coveo-icon-for-quickview-svg');\n      const captionForQuickview = $$('div', { className: 'coveo-caption-for-icon', tabindex: 0 }, 'Quickview'.toLocaleString()).el;\n      const div = $$('div');\n      div.append(iconForQuickview.el);\n      div.append(captionForQuickview);\n      $$(this.element).append(div.el);\n    }\n\n    this.bindClick(result);\n    if (this.bindings.resultElement) {\n      this.bind.on(this.bindings.resultElement, ResultListEvents.openQuickview, () => this.open());\n    }\n  }\n\n  /**\n   * Opens the `Quickview` modal box.\n   */\n  public open() {\n    if (this.modalbox == null) {\n      // To prevent the keyboard from opening on mobile if the search bar has focus\n      Quickview.resultCurrentlyBeingRendered = this.result;\n      $$(<HTMLElement>document.activeElement).trigger('blur');\n\n      const openerObject = this.prepareOpenQuickviewObject();\n      this.createModalBox(openerObject).then(() => {\n        this.bindQuickviewEvents(openerObject);\n        this.animateAndOpen();\n        this.logUsageAnalyticsEvent();\n        this.queryStateModel.set(QueryStateModel.attributesEnum.quickview, this.getHashId());\n        Quickview.resultCurrentlyBeingRendered = null;\n      });\n    }\n  }\n\n  /**\n   * Closes the `Quickview` modal box.\n   */\n  public close() {\n    if (this.modalbox != null) {\n      this.modalbox.close();\n      this.modalbox = null;\n    }\n  }\n\n  public getHashId() {\n    return this.result.queryUid + '.' + this.result.index + '.' + StringUtils.hashCode(this.result.uniqueId);\n  }\n\n  private logUsageAnalyticsEvent() {\n    this.usageAnalytics.logClickEvent(\n      analyticsActionCauseList.documentQuickview,\n      {\n        author: Utils.getFieldValue(this.result, 'author'),\n        documentURL: this.result.clickUri,\n        documentTitle: this.result.title\n      },\n      this.result,\n      this.element\n    );\n  }\n\n  private bindClick(result: IQueryResult) {\n    if (typeof result.hasHtmlVersion == 'undefined' || result.hasHtmlVersion || this.options.alwaysShow) {\n      const clickAction = () => this.open();\n      $$(this.element).on('click', clickAction);\n      this.bind.on(this.element, 'keyup', KeyboardUtils.keypressAction(KEYBOARD.ENTER, clickAction));\n    } else {\n      this.element.style.display = 'none';\n    }\n  }\n\n  private bindQuickviewEvents(openerObject: IQuickviewOpenerObject) {\n    $$(this.modalbox.content).on(QuickviewEvents.quickviewLoaded, () => {\n      if (openerObject.loadingAnimation instanceof HTMLElement) {\n        $$(openerObject.loadingAnimation).remove();\n      } else if (openerObject.loadingAnimation instanceof Promise) {\n        openerObject.loadingAnimation.then(anim => {\n          $$(anim).remove();\n        });\n      }\n    });\n  }\n\n  private animateAndOpen() {\n    const quickviewDocument = $$(this.modalbox.modalBox).find('.' + Component.computeCssClassName(QuickviewDocument));\n    if (quickviewDocument) {\n      Initialization.dispatchNamedMethodCallOrComponentCreation('open', quickviewDocument, null);\n    }\n  }\n\n  private createModalBox(openerObject: IQuickviewOpenerObject) {\n    const computedModalBoxContent = $$('div');\n    computedModalBoxContent.addClass('coveo-computed-modal-box-content');\n    return openerObject.content.then(builtContent => {\n      computedModalBoxContent.append(builtContent.el);\n      const title = DomUtils.getQuickviewHeader(\n        this.result,\n        {\n          showDate: this.options.showDate,\n          title: this.options.title\n        },\n        this.bindings\n      ).el;\n\n      this.modalbox = this.ModalBox.open(computedModalBoxContent.el, {\n        title,\n        className: 'coveo-quick-view',\n        validation: () => {\n          this.closeQuickview();\n          return true;\n        },\n        body: this.element.ownerDocument.body,\n        sizeMod: 'big'\n      });\n      return computedModalBoxContent;\n    });\n  }\n\n  private prepareOpenQuickviewObject() {\n    const loadingAnimation = this.options.loadingAnimation;\n    return {\n      loadingAnimation: loadingAnimation,\n      content: this.prepareQuickviewContent(loadingAnimation)\n    };\n  }\n\n  private prepareQuickviewContent(loadingAnimation: HTMLElement | Promise<HTMLElement>): Promise<Dom> {\n    return this.options.contentTemplate.instantiateToElement(this.result).then((built: HTMLElement) => {\n      const content = $$(built);\n\n      const initOptions = this.searchInterface.options;\n      const initParameters: IInitializationParameters = {\n        options: initOptions,\n        bindings: this.getBindings(),\n        result: this.result\n      };\n      return Initialization.automaticallyCreateComponentsInside(content.el, initParameters).initResult.then(() => {\n        if (content.find('.' + Component.computeCssClassName(QuickviewDocument)) != undefined && this.options.enableLoadingAnimation) {\n          if (loadingAnimation instanceof HTMLElement) {\n            content.prepend(loadingAnimation);\n          } else if (loadingAnimation instanceof Promise) {\n            loadingAnimation.then(anim => {\n              content.prepend(anim);\n            });\n          }\n        }\n        return content;\n      });\n    });\n  }\n\n  private closeQuickview() {\n    this.queryStateModel.set(QueryStateModel.attributesEnum.quickview, '');\n  }\n}\nInitialization.registerAutoCreateComponent(Quickview);\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/Quickview.ts","import { Template } from '../Templates/Template';\nimport { IQueryResult } from '../../rest/QueryResult';\n\nexport class DefaultQuickviewTemplate extends Template {\n  constructor() {\n    super();\n  }\n\n  instantiateToString(queryResult?: IQueryResult): string {\n    return '<div class=\"coveo-quick-view-full-height\"><div class=\"CoveoQuickviewDocument\"></div></div>';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/DefaultQuickviewTemplate.ts","import { Component } from '../Base/Component';\nimport { IComponentBindings } from '../Base/ComponentBindings';\nimport { ComponentOptions } from '../Base/ComponentOptions';\nimport { IQueryResult } from '../../rest/QueryResult';\nimport { Assert } from '../../misc/Assert';\nimport { $$, Dom } from '../../utils/Dom';\nimport { IOpenQuickviewEventArgs } from '../../events/ResultListEvents';\nimport { QuickviewEvents, IQuickviewLoadedEventArgs } from '../../events/QuickviewEvents';\nimport { DeviceUtils } from '../../utils/DeviceUtils';\nimport { Utils } from '../../utils/Utils';\nimport { ColorUtils } from '../../utils/ColorUtils';\nimport { Initialization } from '../Base/Initialization';\nimport { IQuery } from '../../rest/Query';\nimport { IViewAsHtmlOptions } from '../../rest/SearchEndpointInterface';\nimport { AjaxError } from '../../rest/AjaxError';\nimport { l } from '../../strings/Strings';\nimport * as _ from 'underscore';\n\nconst HIGHLIGHT_PREFIX = 'CoveoHighlight';\n\nexport interface IQuickviewDocumentOptions {\n  maximumDocumentSize?: number;\n}\n\ninterface IWord {\n  text: string;\n  count: number;\n  index: number;\n  termsCount: number;\n  element: HTMLElement;\n  occurence: number;\n}\n\ninterface IWordState {\n  word: IWord;\n  color: string;\n  currentIndex: number;\n  index: number;\n}\n\n/**\n * The `QuickviewDocument` component normally exists within a [`Quickview`]{@link Quickview} component. The sole purpose\n * of this component is to add an `<iframe>` which loads the correct HTML version of the current item.\n *\n * The default [`contentTemplate`]{@link Quickview.options.contentTemplate} of the\n * `Quickview` component includes the `QuickviewDocument` component.\n *\n * This component is a result template component (see [Result Templates](https://developers.coveo.com/x/aIGfAQ)).\n */\nexport class QuickviewDocument extends Component {\n  static ID = 'QuickviewDocument';\n\n  /**\n   * The options for the component\n   * @componentOptions\n   */\n  static options: IQuickviewDocumentOptions = {\n    /**\n     * Specifies the maximum preview size that the index should return.\n     *\n     * Default value is `0`, and the index returns the entire preview. Minimum value is `0`.\n     */\n    maximumDocumentSize: ComponentOptions.buildNumberOption({ defaultValue: 0, min: 0 })\n  };\n\n  private iframe: Dom;\n  private header: Dom;\n  private termsToHighlightWereModified: boolean;\n  private keywordsState: IWordState[];\n\n  /**\n   * Creates a new `QuickviewDocument` component.\n   * @param element The HTMLElement on which to instantiate the component.\n   * @param options The options for the `QuickviewDocument` component.\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\n   * automatically resolved (with a slower execution time).\n   * @param result The current result.\n   */\n  constructor(\n    public element: HTMLElement,\n    public options?: IQuickviewDocumentOptions,\n    bindings?: IComponentBindings,\n    public result?: IQueryResult\n  ) {\n    super(element, QuickviewDocument.ID, bindings);\n\n    this.options = ComponentOptions.initComponentOptions(element, QuickviewDocument, options);\n    this.result = result || this.resolveResult();\n    this.termsToHighlightWereModified = false;\n    Assert.exists(this.result);\n  }\n\n  public createDom() {\n    const container = $$('div');\n    container.addClass('coveo-quickview-document');\n    this.element.appendChild(container.el);\n\n    this.header = this.buildHeader();\n    this.iframe = this.buildIFrame();\n\n    container.append(this.header.el);\n    container.append(this.iframe.el);\n  }\n\n  public open() {\n    this.ensureDom();\n\n    const beforeLoad = new Date().getTime();\n    const iframe = <HTMLIFrameElement>this.iframe.find('iframe');\n    iframe.src = 'about:blank';\n    const endpoint = this.queryController.getEndpoint();\n\n    const termsToHighlight = _.keys(this.result.termsToHighlight);\n    const dataToSendOnOpenQuickView: IOpenQuickviewEventArgs = {\n      termsToHighlight: termsToHighlight\n    };\n\n    $$(this.element).trigger(QuickviewEvents.openQuickview, dataToSendOnOpenQuickView);\n    this.checkIfTermsToHighlightWereModified(dataToSendOnOpenQuickView.termsToHighlight);\n\n    const queryObject = _.extend({}, this.getBindings().queryController.getLastQuery());\n\n    if (this.termsToHighlightWereModified) {\n      this.handleTermsToHighlight(dataToSendOnOpenQuickView.termsToHighlight, queryObject);\n    }\n\n    const callOptions: IViewAsHtmlOptions = {\n      queryObject: queryObject,\n      requestedOutputSize: this.options.maximumDocumentSize\n    };\n\n    endpoint\n      .getDocumentHtml(this.result.uniqueId, callOptions)\n      .then((html: HTMLDocument) => {\n        // If the contentDocument is null at this point it means that the Quick View\n        // was closed before we've finished loading it. In this case do nothing.\n        if (iframe.contentDocument == null) {\n          return;\n        }\n\n        this.renderHTMLDocument(iframe, html);\n        this.triggerQuickviewLoaded(beforeLoad);\n      })\n      .catch((error: AjaxError) => {\n        // If the contentDocument is null at this point it means that the Quick View\n        // was closed before we've finished loading it. In this case do nothing.\n        if (iframe.contentDocument == null) {\n          return;\n        }\n\n        if (error.status != 0) {\n          this.renderErrorReport(iframe, error.status);\n          this.triggerQuickviewLoaded(beforeLoad);\n        } else {\n          iframe.onload = () => {\n            this.triggerQuickviewLoaded(beforeLoad);\n          };\n          iframe.src = endpoint.getViewAsHtmlUri(this.result.uniqueId, callOptions);\n        }\n      });\n  }\n\n  protected renderHTMLDocument(iframe: HTMLIFrameElement, html: HTMLDocument) {\n    iframe.onload = () => {\n      this.computeHighlights(iframe.contentWindow);\n\n      // Remove white border for new Quickview\n      if (this.isNewQuickviewDocument(iframe.contentWindow)) {\n        const body = $$(this.element).find('iframe');\n        if (body) {\n          body.style.padding = '0';\n          const header = $$(this.element).find('.coveo-quickview-header');\n          header.style.paddingTop = '10';\n          header.style.paddingLeft = '10';\n        }\n      }\n\n      if ($$(this.element).find('.coveo-quickview-header').innerHTML == '') {\n        $$(this.element).find('.coveo-quickview-header').style.display = 'none';\n      }\n    };\n\n    this.writeToIFrame(iframe, html);\n    this.wrapPreElementsInIframe(iframe);\n  }\n\n  private renderErrorReport(iframe: HTMLIFrameElement, errorStatus: number) {\n    let errorString = '';\n    if (errorStatus == 400) {\n      errorString = 'NoQuickview';\n    } else {\n      errorString = 'OopsError';\n    }\n    const errorMessage = `<html><body style='font-family: Arimo, \\'Helvetica Neue\\', Helvetica, Arial, sans-serif; -webkit-text-size-adjust: none;' >${l(\n      errorString\n    )} </body></html>`;\n    this.writeToIFrame(iframe, errorMessage);\n  }\n\n  private writeToIFrame(iframe: HTMLIFrameElement, content: HTMLDocument);\n  private writeToIFrame(iframe: HTMLIFrameElement, content: String);\n  private writeToIFrame(iframe: HTMLIFrameElement, content: any) {\n    let toWrite = content;\n\n    if (content instanceof HTMLDocument) {\n      _.each($$(content.body).findAll('a'), link => {\n        link.setAttribute('target', '_top');\n      });\n      toWrite = content.getElementsByTagName('html')[0].outerHTML;\n    }\n\n    iframe.contentWindow.document.open();\n    try {\n      iframe.contentWindow.document.write(toWrite);\n    } catch (e) {\n      // The iframe is sandboxed, and can throw ugly errors, especially when rendering random web pages.\n      // Suppress those\n    }\n\n    iframe.contentWindow.document.close();\n  }\n\n  private wrapPreElementsInIframe(iframe: HTMLIFrameElement) {\n    try {\n      const style = document.createElement('style');\n      style.type = 'text/css';\n\n      // This CSS forces <pre> tags used in some emails to wrap by default\n      let cssText =\n        'html pre { white-space: pre-wrap; white-space: -moz-pre-wrap; white-space: -pre-wrap; white-space: -o-pre-wrap; word-wrap: break-word; }';\n\n      // Some people react strongly when presented with their browser's default font, so let's fix that\n      cssText += \"body, html { font-family: Arimo, 'Helvetica Neue', Helvetica, Arial, sans-serif; -webkit-text-size-adjust: none; }\";\n\n      if (DeviceUtils.isIos()) {\n        // Safari on iOS forces resize iframes to fit their content, even if an explicit size\n        // is set on the iframe. Isn't that great? By chance there is a trick around it: by\n        // setting a very small size on the body and instead using min-* to set the size to\n        // 100% we're able to trick Safari from thinking it must expand the iframe. Amazed.\n        // The 'scrolling' part is required otherwise the hack doesn't work.\n        //\n        // http://stackoverflow.com/questions/23083462/how-to-get-an-iframe-to-be-responsive-in-ios-safari\n        cssText += 'body, html { height: 1px !important; min-height: 100%; width: 1px !important; min-width: 100%; overflow: scroll; }';\n        $$(iframe).setAttribute('scrolling', 'no');\n\n        // Some content is cropped on iOs if a margin is present\n        // We remove it and add one on the iframe wrapper.\n        cssText += 'body, html {margin: auto}';\n        iframe.parentElement.style.margin = '0 0 5px 5px';\n      }\n\n      if ('styleSheet' in style) {\n        style['styleSheet'].cssText = cssText;\n      } else {\n        style.appendChild(document.createTextNode(cssText));\n      }\n      const head = iframe.contentWindow.document.head;\n      head.appendChild(style);\n    } catch (e) {\n      // if not allowed\n    }\n  }\n\n  private triggerQuickviewLoaded(beforeLoad: number) {\n    const afterLoad = new Date().getTime();\n    const eventArgs: IQuickviewLoadedEventArgs = { duration: afterLoad - beforeLoad };\n    $$(this.element).trigger(QuickviewEvents.quickviewLoaded, eventArgs);\n  }\n\n  // An highlighted term looks like:\n  //\n  //     <span id='CoveoHighlight:X.Y.Z'>a</span>\n  //\n  // The id has 3 components:\n  // - X: the term\n  // - Y: the term occurence\n  // - Z: the term part\n  //\n  // For the 'Z' component, if the term 'foo bar' is found in multiple elements, we will see:\n  //\n  //     <span id='CoveoHighlight:1.1.1'>foo</span>\n  //     <span id='CoveoHighlight:1.1.2'>bar</span>\n  //\n  // Highlighted words can overlap, which looks like:\n  //\n  //     <span id='CoveoHighlight:1.Y.Z'>\n  //         a\n  //         <coveotaggedword id='CoveoHighlight:2.Y.Z'>b</coveotaggedword>\n  //     </span>\n  //     <span id='CoveoHighlight:2.Y.Z'>c</span>\n  //\n  // In the previous example, the words 'ab' and 'bc' are highlighted.\n  //\n  // One thing important to note is that the id of all 'coveotaggedword' for\n  // the same word AND the first 'span' for that word will have the same id.\n  //\n  // Example:\n  //\n  //     <span id='CoveoHighlight:1.1.1'>\n  //         a\n  //         <coveotaggedword id='CoveoHighlight:2.1.1'>b</coveotaggedword>\n  //     </span>\n  //     <span id='CoveoHighlight:1.1.2'>\n  //         c\n  //         <coveotaggedword id='CoveoHighlight:2.1.1'>d</coveotaggedword>\n  //     </span>\n  //     <span id='CoveoHighlight:2.1.1'>e</span>\n  //     <span id='CoveoHighlight:2.1.2'>f</span>\n  //\n  // In the previous example, the words 'abcd' and 'bcdef' are highlighted.\n  //\n  // This method is public for testing purposes.\n  public computeHighlights(window: Window): string[] {\n    $$(this.header).empty();\n    this.keywordsState = [];\n\n    const words: { [index: string]: IWord } = {};\n    let highlightsCount = 0;\n    _.each($$(window.document.body).findAll('[id^=\"' + HIGHLIGHT_PREFIX + '\"]'), (element: HTMLElement, index: number) => {\n      const idParts = this.getHighlightIdParts(element);\n\n      if (idParts) {\n        const idIndexPart = idParts[1]; // X\n        const idOccurencePart = parseInt(idParts[2], 10); // Y\n        const idTermPart = parseInt(idParts[3], 10); // Z in <span id='CoveoHighlight:X.Y.Z'>a</span>\n\n        let word = words[idIndexPart];\n\n        // The 'idTermPart' check is to circumvent a bug from the index\n        // where an highlight of an empty string start with an idTermPart > 1.\n        if (word == null && idTermPart == 1) {\n          words[idIndexPart] = word = {\n            text: this.getHighlightInnerText(element),\n            count: 1,\n            index: parseInt(idIndexPart, 10),\n\n            // Here I try to be clever.\n            // An overlaping word:\n            // 1) always start with a 'coveotaggedword' element.\n            // 2) then other 'coveotaggedword' elements may follow\n            // 3) then a 'span' element may follow.\n            //\n            // All 1), 2) and 3) will have the same id so I consider them as\n            // a whole having the id 0 instead of 1.\n            termsCount: element.nodeName.toLowerCase() == 'coveotaggedword' ? 0 : 1,\n            element: element,\n            occurence: idOccurencePart\n          };\n        } else if (word) {\n          if (word.occurence == idOccurencePart) {\n            if (element.nodeName.toLowerCase() == 'coveotaggedword') {\n              word.text += this.getHighlightInnerText(element);\n              // Doesn't count as a term part (see method description for more info).\n            } else if (word.termsCount < idTermPart) {\n              word.text += this.getHighlightInnerText(element);\n              word.termsCount += 1;\n            }\n          }\n\n          word.count = Math.max(word.count, idOccurencePart);\n          highlightsCount += 1;\n        }\n\n        // See the method description to understand why this code const us\n        // create the word 'bcdef' instead of 'bdef'.\n        if (word && word.occurence == idOccurencePart && element.nodeName.toLowerCase() == 'span') {\n          const embeddedWordParts = this.getHightlightEmbeddedWordIdParts(element);\n          const embeddedWord = embeddedWordParts ? words[embeddedWordParts[1]] : null;\n\n          if (embeddedWord && embeddedWord.occurence == parseInt(embeddedWordParts[2], 10)) {\n            embeddedWord.text += element.childNodes[0].nodeValue || ''; // only immediate text without children.\n          }\n        }\n      }\n    });\n\n    if (highlightsCount == 0) {\n      this.header.el.style.minHeight = '0';\n    }\n\n    const resolvedWords = [];\n\n    _.each(words, word => {\n      // When possible, take care to find the original term from the query instead of the\n      // first highlighted version we encounter. This relies on a recent feature by the\n      // Search API, but will fallback properly on older versions.\n      word.text = this.resolveOriginalTermFromHighlight(word.text);\n\n      const state = {\n        word: word,\n        color: word.element.style.backgroundColor,\n        currentIndex: 0,\n        index: word.index\n      };\n\n      this.keywordsState.push(state);\n      $$(this.header).append(this.buildWordButton(state, window));\n\n      resolvedWords.push(word.text);\n    });\n\n    return resolvedWords;\n  }\n\n  private getHighlightIdParts(element: HTMLElement): string[] {\n    const parts = element.id.substr(HIGHLIGHT_PREFIX.length + 1).match(/^([0-9]+)\\.([0-9]+)\\.([0-9]+)$/);\n\n    return parts && parts.length > 3 ? parts : null;\n  }\n\n  private getHighlightInnerText(element: HTMLElement): string {\n    if (element.nodeName.toLowerCase() == 'coveotaggedword') {\n      // only immediate text without children.\n      return element.childNodes.length >= 1 ? element.childNodes.item(0).textContent || '' : '';\n    } else {\n      return element.textContent || '';\n    }\n  }\n\n  private getHightlightEmbeddedWordIdParts(element: HTMLElement): string[] {\n    const embedded = element.getElementsByTagName('coveotaggedword')[0];\n\n    return embedded ? this.getHighlightIdParts(<HTMLElement>embedded) : null;\n  }\n\n  private resolveOriginalTermFromHighlight(highlight: string): string {\n    let found = highlight;\n\n    // Beware, terms to highlight is only set by recent search APIs.\n    if (this.result.termsToHighlight) {\n      // We look for the term expansion and we'll return the corresponding\n      // original term is one is found.\n      found =\n        _.find(_.keys(this.result.termsToHighlight), (originalTerm: string) => {\n          // The expansions do NOT include the original term (makes sense), so be sure to check\n          // the original term for a match too.\n          return (\n            originalTerm.toLowerCase() == highlight.toLowerCase() ||\n            _.find(this.result.termsToHighlight[originalTerm], (expansion: string) => expansion.toLowerCase() == highlight.toLowerCase()) !=\n              undefined\n          );\n        }) || found;\n    }\n    return found;\n  }\n\n  private buildWordButton(wordState: IWordState, window: Window): HTMLElement {\n    const wordHtml = $$('span');\n    wordHtml.addClass('coveo-term-for-quickview');\n\n    const quickviewName = $$('span');\n    quickviewName.addClass('coveo-term-for-quickview-name');\n    quickviewName.setHtml(wordState.word.text);\n    quickviewName.on('click', () => {\n      this.navigate(wordState, false, window);\n    });\n    wordHtml.append(quickviewName.el);\n\n    const quickviewUpArrow = $$('span');\n    quickviewUpArrow.addClass('coveo-term-for-quickview-up-arrow');\n    const quickviewUpArrowIcon = $$('span');\n    quickviewUpArrowIcon.addClass('coveo-term-for-quickview-up-arrow-icon');\n    quickviewUpArrow.append(quickviewUpArrowIcon.el);\n    quickviewUpArrow.on('click', () => {\n      this.navigate(wordState, true, window);\n    });\n    wordHtml.append(quickviewUpArrow.el);\n\n    const quickviewDownArrow = $$('span');\n    quickviewDownArrow.addClass('coveo-term-for-quickview-down-arrow');\n    const quickviewDownArrowIcon = $$('span');\n    quickviewDownArrowIcon.addClass('coveo-term-for-quickview-down-arrow-icon');\n    quickviewDownArrow.append(quickviewDownArrowIcon.el);\n    quickviewDownArrow.on('click', () => {\n      this.navigate(wordState, false, window);\n    });\n    wordHtml.append(quickviewDownArrow.el);\n\n    wordHtml.el.style.backgroundColor = wordState.color;\n    wordHtml.el.style.borderColor = this.getSaturatedColor(wordState.color);\n    quickviewDownArrow.el.style.borderColor = this.getSaturatedColor(wordState.color);\n\n    return wordHtml.el;\n  }\n\n  private navigate(state: IWordState, backward: boolean, window: Window) {\n    const fromIndex = state.currentIndex;\n    let toIndex: number;\n    if (!backward) {\n      toIndex = fromIndex == state.word.count ? 1 : fromIndex + 1;\n    } else {\n      toIndex = fromIndex <= 1 ? state.word.count : fromIndex - 1;\n    }\n\n    const scroll = this.getScrollingElement(window);\n\n    // Un-highlight any currently selected element\n    const current = $$(scroll).find('[id^=\"' + HIGHLIGHT_PREFIX + ':' + state.word.index + '.' + fromIndex + '\"]');\n    if (current) {\n      current.style.border = '';\n    }\n\n    // Find and highlight the new element.\n    const element = $$(window.document.body).find('[id^=\"' + HIGHLIGHT_PREFIX + ':' + state.word.index + '.' + toIndex + '\"]');\n    element.style.border = '1px dotted #333';\n    state.currentIndex = toIndex;\n\n    // pdf2html docs hide the non-visible frames by default, to speed up browsers.\n    // But this prevents keyword navigation from working so we must force show it. This\n    // is done by adding the 'opened' class to it (defined by pdf2html).\n    if (this.isNewQuickviewDocument(window)) {\n      const pdf = $$(element).closest('.pc');\n      $$(pdf).addClass('opened');\n    }\n\n    element.scrollIntoView();\n\n    document.body.scrollLeft = 0;\n    document.body.scrollTop = 0;\n  }\n\n  private buildHeader(): Dom {\n    const header = $$('div');\n    header.addClass('coveo-quickview-header');\n    return header;\n  }\n\n  private buildIFrame(): Dom {\n    const iFrame = $$('iframe');\n    iFrame.setAttribute('sandbox', 'allow-same-origin allow-top-navigation');\n    const iFrameWrapper = $$('div');\n    iFrameWrapper.addClass('coveo-iframeWrapper');\n    iFrameWrapper.el.appendChild(iFrame.el);\n    return iFrameWrapper;\n  }\n\n  private getScrollingElement(iframeWindow: Window): HTMLElement {\n    let found: HTMLElement;\n\n    if (this.isNewQuickviewDocument(iframeWindow)) {\n      // 'New' quick views have a #page-container element generated by the pdf2html thing.\n      // This is the element we want to scroll on.\n      found = $$(iframeWindow.document.body).find('#page-container');\n    }\n\n    // If all else fails, we use the body\n    if (!found) {\n      found = $$(iframeWindow.document.body).el;\n    }\n\n    return found;\n  }\n\n  private isNewQuickviewDocument(iframeWindow: Window): boolean {\n    const meta = $$(iframeWindow.document.head).find(\"meta[name='generator']\");\n    return meta && meta.getAttribute('content') == 'pdf2htmlEX';\n  }\n\n  private handleTermsToHighlight(termsToHighlight: Array<string>, queryObject: IQuery) {\n    for (const term in this.result.termsToHighlight) {\n      delete this.result.termsToHighlight[term];\n    }\n    let query = '';\n    _.each(termsToHighlight, term => {\n      query += term + ' ';\n      this.result.termsToHighlight[term] = new Array<string>(term);\n    });\n    query = query.substring(0, query.length - 1);\n    queryObject.q = query;\n  }\n\n  private checkIfTermsToHighlightWereModified(termsToHighlight: Array<string>) {\n    if (!Utils.arrayEqual(termsToHighlight, _.keys(this.result.termsToHighlight))) {\n      this.termsToHighlightWereModified = true;\n    }\n  }\n\n  private getSaturatedColor(color: string): string {\n    const r = parseInt(color.substring(4, 7));\n    const g = parseInt(color.substring(9, 12));\n    const b = parseInt(color.substring(14, 17));\n    const hsv = ColorUtils.rgbToHsv(r, g, b);\n    hsv[1] *= 2;\n    if (hsv[1] > 1) {\n      hsv[1] = 1;\n    }\n    const rgb = ColorUtils.hsvToRgb(hsv[0], hsv[1], hsv[2]);\n    return 'rgb(' + rgb[0].toString() + ', ' + rgb[1].toString() + ', ' + rgb[2].toString() + ')';\n  }\n}\n\nInitialization.registerAutoCreateComponent(QuickviewDocument);\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Quickview/QuickviewDocument.ts","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./sass/_Quickview.scss\n// module id = 404\n// module chunks = 14 73"],"sourceRoot":""}