<?php

// default theme impementations
require_once(drupal_get_path('module', 'gsb_feature_coveo_search') . '/theme/gsb_feature_coveo_search.theme.inc');

/**
 * Implements hook_menu().
 */
function gsb_feature_coveo_search_menu() {

  $items['coveo-search'] = array(
    'title' => 'Search',
    'page callback' => 'gsb_feature_coveo_search_run_search',
    'access callback' => array(TRUE),
    'type' => MENU_CALLBACK,
  );

  $items['coveo-search/v2/querySuggest'] = array(
    'title' => 'Search',
    'page callback' => 'gsb_feature_coveo_search_run_querysuggest',
    'access callback' => array(TRUE),
    'type' => MENU_CALLBACK,
  );

  $items['coveo-analytics'] = array(
    'title' => 'Analytics',
    'page callback' => 'gsb_feature_coveo_search_run_analytics',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['coveo-search-page'] = array(
    'title' => 'Search',
    'page callback' => 'gsb_feature_coveo_search_page',
    'access callback' => array(TRUE),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_url_inbound_alter().
 *
 * Make search/* URL to actually behave as coveo-search-page/*.
 */
function gsb_feature_coveo_search_url_inbound_alter(&$path, $original_path, $path_language) {
  // This will not allow us to use search module, it will redirect to gsearch instead.
  if (arg(0, $path) == 'search') {
    $path = 'coveo-search-page/' . arg(1, $path);
  }
}

/**
 * Implements hook_url_outbound_alter().
 *
 * Make coveo-search-page/* links to go to search/* URL.
 */
function gsb_feature_coveo_search_url_outbound_alter(&$path, &$options, $original_path) {
  if (arg(0, $path) == 'coveo-search-page') {
    $path = str_replace('coveo-search-page', 'search', $path);
  }
}

/**
 * Implements hook_module_implements_alter().
 */
function gsb_feature_coveo_search_module_implements_alter(&$implementations, $hook) {
  // Make sure we come after search module's implementation.
  if ($hook == 'menu') {
    $group = $implementations['gsb_feature_coveo_search'];
    unset($implementations['gsb_feature_coveo_search']);
    $implementations['gsb_feature_coveo_search'] = $group;
  }
}

/**
 * Implements hook_block_info().
 */
function gsb_feature_coveo_search_block_info() {
  $blocks = array();

  // block search form
  $blocks['coveo_search_block_form'] = array(
    'info' => t('Coveo search form'),
    'cache' => DRUPAL_NO_CACHE,
  );

  // block search suggests form
  $blocks['coveo_search_block_suggests_form'] = array(
    'info' => t('Coveo search suggests form'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function gsb_feature_coveo_search_block_view($delta = '') {

  $block = array();

  if (true) { //user_access('access_google_appliance_content')) {
    switch ($delta) {
      case 'coveo_search_block_form':
        $block['content'] = drupal_get_form('coveo_search_block_form');
        break;
      case 'coveo_search_block_suggests_form':
        $block['content'] = drupal_get_form('coveo_search_block_suggests_form');
        break;
    }
  }

  return $block;
}

/**
 * Form builder outputs the search form for the search block
 *
 * @ingroup forms
 * @see coveo_search_block_form_submit()
 * @see coveo-search-block-form.tpl.php
 */
function coveo_search_block_form($form, &$form_state) {

  $form['search_keys'] = array(
    '#type' => 'textfield',
    '#title' => t('Enter the terms you wish to search for.'),
    '#title_display' => 'invisible',
    '#size' => 15,
    '#default_value' => '',
  );

  $form['actions'] = array(
    '#type' => 'actions',
    'submit' => array(
      '#type' => 'submit',
      '#value' => t('Search'),
    ),
  );

  return $form;
}

/**
 * Submit handler for block search form just sets the redirect for the form
 * based on the search query
 */
function coveo_search_block_form_submit($form, &$form_state) {
  global $base_url;

  // kill any dynamic destinations, as the results page is always the destination
  if (isset($_GET['destination'])) {
    unset($_GET['destination']);
  }

  // set the redirect
  $search_query = rawurlencode($form_state['values']['search_keys']);
  $form_state['redirect'] = url($base_url . '/search#q=' . $search_query, array('absolute' => TRUE));
  // search execution happens in page callback
}

/**
 * Form builder outputs the search form for the search block
 *
 * @ingroup forms
 * @see coveo_search_block_suggests_form_submit()
 * @see coveo-search-block-suggests-form.tpl.php
 */
function coveo_search_block_suggests_form($form, &$form_state) {
  global $base_url;

  $form['search_keys'] = array(
    '#type' => 'textfield',
    '#title' => t('Enter the terms you wish to search for.'),
    '#title_display' => 'invisible',
    '#size' => 15,
    '#default_value' => '',
  );

  $form['actions'] = array(
    '#type' => 'actions',
    'submit' => array(
      '#type' => 'submit',
      '#value' => t('Search'),
    ),
  );

  return $form;
}

/**
 * Submit handler for block search form just sets the redirect for the form
 * based on the search query
 */
function coveo_search_block_suggests_form_submit($form, &$form_state) {
  global $base_url;

  // kill any dynamic destinations, as the results page is always the destination
  if (isset($_GET['destination'])) {
    unset($_GET['destination']);
  }

  // set the redirect
  $search_query = urlencode($form_state['values']['search_keys']);
  $form_state['redirect'] = url($base_url . '/search#q=' . $search_query, array('absolute' => TRUE));
  // search execution happens in page callback
}

/**
 * Displays Search Page using Coveo template
 */
function gsb_feature_coveo_search_page() {
  global $base_url;

  $search_query = '';

  drupal_add_css('https://static.cloud.coveo.com/searchui/v2.3826/css/CoveoFullSearchNewDesign.css', 'external');

  drupal_add_css(drupal_get_path('module', 'gsb_feature_coveo_search') . '/css/coveo-search-custom.css');

  drupal_add_js('https://static.cloud.coveo.com/searchui/v2.3826/js/CoveoJsSearch.min.js', 'external');
  drupal_add_js('https://static.cloud.coveo.com/searchui/v2.3826/js/templates/templatesNew.js', 'external');

  drupal_add_js(drupal_get_path('module', 'gsb_feature_coveo_search') . '/js/coveo-search-page.js');

  drupal_add_js(array('gsb_feature_coveo_search_page' => array('search_query' => $search_query)), 'setting');
  drupal_add_js(array('baseUrl' => $base_url), 'setting');

  $template_data = array();
  return theme('coveo_search_page', $template_data);
}

/**
 * Proxy for posting query suggestions
 */
function gsb_feature_coveo_search_run_querysuggest() {

  list($pipeline, $audience, $contextAudience) = gsb_feature_coveo_search_get_filter_info();

  $source = "@source=(" . '"' . "GSB public website" . '"' . ")";
  if ($pipeline == 'mygsb-pipeline') {
    $source = "(" . "@source=(" . '"' . "GSB public website" . '"' . ")" . " OR " . "@source=(" . '"' . "MyGSB website" . '"' . ")" . ")";
  }

  $data = $_POST;

  $search = $_POST['q'];

  $data["q"] = $search;
  $data["cq"] = $source . " AND " . $audience;

  $data["pipeline"] = $pipeline;

  $data["customData"] = array(
    "context" => array(
      "context_audience" => $contextAudience
    )
  );

  unset($data['coveoquery']);
  unset($data['actionsHistory']);
  unset($data['fieldsToInclude']);

  $data['queryFunctions'] = array();
  $data['rankingFunctions'] = array();
  $data['groupBy'] = array();

  $query_data = json_encode($data);

  $apikey = variable_get("coveo_api_key");
  $apikey = str_replace("access_token=","", $apikey);
  $bearer = "Bearer " . $apikey;

  $options = array(
    'method' => 'POST',
    'data' => $query_data,
    'timeout' => 15,
    'headers' => array('Content-Type' => 'application/json', 'Authorization' => $bearer),
  );

  $url = variable_get('coveo_search_endpoint', '');
  $url .= "querySuggest";
  $url .= "?";
  $url .= variable_get("coveo_api_key");
  $url .= "&";
  $url .= variable_get("coveo_organization_id");

  $url = str_replace("platform.cloud.coveo.com","search.cloud.coveo.com", $url);

  $result = drupal_http_request($url, $options);

  if (empty($result->data)) {
    return;
  }

  drupal_add_http_header('Content-Type', 'application/json');

  echo $result->data;
  drupal_exit();
}

/**
 * Proxy for posting search queries
 */
function gsb_feature_coveo_search_run_search() {

  if (!empty($_GET['q']) && strpos($_GET['q'], 'subscriptions')) {
    return;
  }

  $time_start = round(microtime(true) * 1000);

  list($pipeline, $audience, $contextAudience) = gsb_feature_coveo_search_get_filter_info();

  $source = "@source=(" . '"' . "GSB public website" . '"' . ")";
  if ($pipeline == 'mygsb-pipeline') {
    $source = "(" . "@source=(" . '"' . "GSB public website" . '"' . ")" . " OR " . "@source=(" . '"' . "MyGSB website" . '"' . ")" . ")";
  }

  if (!empty($_POST['patternType'])) {
    $data = $_POST;
    $data['pipeline'] = $pipeline;
    if (!empty($data['queryOverride'])) {
      if ($pipeline == "gsb-pipeline") {
        $data['queryOverride'] = "@source=('Stanford GSB public')";
      }
    }
    unset($data['sortCriteria']);
  }
  else {
    if (empty($_POST['q'])) {
      $search = '';
    }
    else {
      $search = $_POST['q'];
    }

    $numberOfResults = 100;
    if (!empty($_POST['numberOfResults'])) {
      $numberOfResults = $_POST['numberOfResults'];
    }

    $firstResult = 0;
    if (!empty($_POST['firstResult'])) {
      $firstResult = $_POST['firstResult'];
    }

    $data = $_POST;

    $data["q"] = $search;
    $data["cq"] = $source . " AND " . $audience;

    $data["enableDuplicateFiltering"] = true;

    $data["pipeline"] = $pipeline;

    $data["customData"] = array(
      "context" => array(
        "context_audience" => $contextAudience
      )
    );

    unset($data['actionsHistory']);
    unset($data['fieldsToInclude']);

    $data['queryFunctions'] = array();
    $data['rankingFunctions'] = array();
    $data['groupBy'] = array();

  }

  $query_data = json_encode($data);

  $options = array(
    'method' => 'POST',
    'data' => $query_data,
    'timeout' => 15,
    'headers' => array('Content-Type' => 'application/json'),
  );

  $url = variable_get('coveo_search_endpoint', '');
  if (!empty($_POST['patternType'])) {
    $url .= "values";
  }
  $url .= "?";
  $url .= variable_get("coveo_api_key");
  $url .= "&";
  $url .= variable_get("coveo_organization_id");

  $pattern = "";
  if (!empty($_POST['pattern']))
  {
    $pattern = $_POST['pattern'];
  }

  $time_end = round(microtime(true) * 1000);
  $time = $time_end - $time_start;

  $output = "Time from start of proxy = " . sprintf('%f', $time) . " pattern = " . $pattern;
  watchdog('coveo', $output);

  $time_start = round(microtime(true) * 1000);
  $result = drupal_http_request($url, $options);
  $time_end = round(microtime(true) * 1000);
  $time = $time_end - $time_start;

  $output = "Time for http request = " . sprintf('%f', $time);
  watchdog('coveo', $output);

  $time_start = round(microtime(true) * 1000);

  if (empty($result->data)) {
    return;
  }

  drupal_add_http_header('Content-Type', 'application/json');

  $time_end = round(microtime(true) * 1000);
  $time = $time_end - $time_start;

  $output = "Time at end of proxy = " . sprintf('%f', $time) . " pattern = " . $pattern;
  watchdog('coveo', $output);

  echo $result->data;
  drupal_exit();
}

/**
 * Proxy for posting analytics data
 */
function gsb_feature_coveo_search_run_analytics() {

  $received_json = file_get_contents("php://input",  TRUE);
  $json = drupal_json_decode($received_json, TRUE);

  if (!empty($json[0])) {
    $data = $json[0];
  }
  else if (!empty($json)) {
    $data = $json;
  }
  else {
    return;
  }

  list($pipeline, $audience) = gsb_feature_coveo_search_get_filter_info();

  if (empty($data['customData'])) {
    $data["customData"] = array(
      "context" => array(
        "context_audience" => $audience
      )
    );
  }
  else {
    $data["customData"]["context"] = array("context_audience" => $audience);
  }

  $analytics_data = json_encode($data);

  $options = array(
    'method' => 'POST',
    'data' => $analytics_data,
    'timeout' => 15,
    'headers' => array('Content-Type' => 'application/json'),
  );

  $url = variable_get('coveo_analytics_endpoint', '');
  $url .= "/rest/v15/analytics/search";

  if (!empty($_GET['q']) && strpos($_GET['q'], 'analytics/click') > 0) {
    $url = str_replace('analytics/search', 'analytics/click', $url);
  }
  if (!empty($_GET['q']) && strpos($_GET['q'], 'analytics/custom') > 0) {
    $url = str_replace('analytics/search', 'analytics/custom', $url);
  }

  $url .= "?";
  $url .= variable_get("coveo_api_key");
  $url .= "&";
  $url .= variable_get("coveo_organization_id");

  $result = drupal_http_request($url, $options);

  drupal_add_http_header('Content-Type', 'application/json');
  echo $result->data;
  drupal_exit();
}

/**
 * Returns pipeline and audience filter settings for user
 */
function gsb_feature_coveo_search_get_filter_info() {
  global $user;

  $pipeline = "gsb-pipeline";
  $audience = "@gsbaudience=('public')";
  $contextAudience = "public";

  // todo: Deferred

  if (function_exists('mygsb_masquerade_get_workgroup')) {

    $pipeline = "mygsb-pipeline";

    $workgroup = mygsb_masquerade_get_workgroup($user);
    //dpm('found the workgroup');
    //dpm($workgroup);

    switch ($workgroup) {
      case 'Staff':
        $audience = "(@gsbaudience=('MyGSBDrupal_staff','public') OR NOT @gsbaudience)";
        $contextAudience = 'MyGSBDrupal_staff';
        break;
      case 'MBA Admit Round 1':
        $audience = "(@gsbaudience=('MyGSBDrupal_mbaadmitround1','public') OR NOT @gsbaudience)";
        $contextAudience = 'MyGSBDrupal_mbaadmitround1';
        break;
      case 'MBA Admit Round 2':
        $audience = "(@gsbaudience=('MyGSBDrupal_mbaadmitround2','public') OR NOT @gsbaudience)";
        $contextAudience = 'MyGSBDrupal_mbaadmitround2';
        break;
      case 'MBA Admit Round 3':
        $audience = "(@gsbaudience=('MyGSBDrupal_mbaadmitround3','public') OR NOT @gsbaudience)";
        $contextAudience = 'MyGSBDrupal_mbaadmitround3';
        break;
      case 'MBA plus':
        $audience = "(@gsbaudience=('MyGSBDrupal_mbaplus','public') OR NOT @gsbaudience)";
        $contextAudience = 'MyGSBDrupal_mbaplus';
        break;
      case 'MBA1':
        $audience = "(@gsbaudience=('MyGSBDrupal_mba1','public') OR NOT @gsbaudience)";
        $contextAudience = 'MyGSBDrupal_mba1';
        break;
      case 'MBA2':
        $audience = "(@gsbaudience=('MyGSBDrupal_mba2','public') OR NOT @gsbaudience)";
        $contextAudience = 'MyGSBDrupal_mba2';
        break;
      case 'MSx':
        $audience = "(@gsbaudience=('MyGSBDrupal_msx','public') OR NOT @gsbaudience)";
        $contextAudience = 'MyGSBDrupal_msx';
        break;
      case 'MSx Admit':
        $audience = "(@gsbaudience=('MyGSBDrupal_msxadmit','public') OR NOT @gsbaudience)";
        $contextAudience = 'MyGSBDrupal_msxadmit';
        break;
      case 'PhD':
        $audience = "(@gsbaudience=('MyGSBDrupal_phd','public') OR NOT @gsbaudience)";
        $contextAudience = 'MyGSBDrupal_phd';
        break;
      case 'PhD Admit':
        $audience = "(@gsbaudience=('MyGSBDrupal_phdadmit','public') OR NOT @gsbaudience)";
        $contextAudience = 'MyGSBDrupal_phdadmit';
        break;
      case 'Faculty':
        $audience = "(@gsbaudience=('MyGSBDrupal_faculty','public') OR NOT @gsbaudience)";
        $contextAudience = 'MyGSBDrupal_faculty';
        break;
    }
  }

  return array ($pipeline, $audience, $contextAudience);
}
